---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import { withBase } from "../../utils/paths";

export async function getStaticPaths() {
  const entries = await getCollection("tutorial");
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const { data } = entry;
const { Content } = await entry.render();
const siteEntry = await getEntry("site", "resources").catch(() => null);
const downloadsConfig = siteEntry?.data.downloads ?? {
  enabled: true,
  title: "配套资源",
  items: [
    { label: "基础文生图工作流", url: "assets/workflows/text-to-image-basic.json", download: true },
    { label: "工作流复用模板", url: "assets/workflows/workflow-reuse-template.json", download: true }
  ]
};
const resolveUrl = (value?: string | null) => withBase(value) ?? value ?? undefined;
---
<BaseLayout title={data.title} description={data.description}>
  <article class="prose prose-lg mx-auto max-w-3xl">
    <header class="mb-8 space-y-3 text-center">
      <p class="text-xs font-semibold uppercase tracking-[0.3em] text-primary">ComfyUI 核心教程</p>
      <h1 class="text-4xl font-bold">{data.title}</h1>
      <p class="text-slate-600 dark:text-slate-300">{data.description}</p>
      {data.heroImage && (
        <img src={resolveUrl(data.heroImage)} alt={`${data.title} 章节示意图`} class="mx-auto rounded-xl shadow-lg" loading="lazy" />
      )}
    </header>
    <Content />
    {downloadsConfig.enabled && downloadsConfig.items.length > 0 && (
      <footer class="mt-12 space-y-3 rounded-xl border border-primary/30 bg-primary/5 p-6 text-sm shadow-sm dark:border-primary/40 dark:bg-primary/10">
        <div>
          <p class="font-semibold text-primary">{downloadsConfig.title}</p>
          {downloadsConfig.description && <p class="mt-1 text-slate-600 dark:text-slate-300">{downloadsConfig.description}</p>}
        </div>
        <ul class="space-y-2">
          {downloadsConfig.items.map((item) => (
            <li>
              <a class="text-primary hover:underline" href={resolveUrl(item.url)} download={item.download ? "" : undefined}>
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </footer>
    )}
  </article>
</BaseLayout>

